trigger: none

pool:
  name: pwc-task

variables:
  - name: AZURE_RM_SVC_CONN
    value: 'sc-azure-terraform'
  - name: TF_STATE_RG
    value: 'pwc-task'
  - name: TF_STATE_SA
    value: 'terraformstate1759533356'
  - name: TF_STATE_CONTAINER
    value: 'terraform-state'
  - name: TF_STATE_KEY
    value: 'terraform.tfstate'

stages:
# Stage 1: Validate and Plan
- stage: terraform_validate_plan
  displayName: 'Terraform Validate & Plan'
  jobs:
  - template: .pipeline/templates/terraform-plan.yaml
    parameters:
      tfDir: 'terraform'
      planOut: 'tfplan.bin'
      azureRmServiceConnection: $(AZURE_RM_SVC_CONN)
      backend:
        rg: $(TF_STATE_RG)
        sa: $(TF_STATE_SA)
        container: $(TF_STATE_CONTAINER)
        key: $(TF_STATE_KEY)

# Stage 2: Apply Changes
- stage: terraform_apply
  displayName: 'Terraform Apply'
  dependsOn: terraform_validate_plan
  condition: succeeded()
  jobs:

      - template: .pipeline/templates/terraform-apply.yaml
        parameters:
          tfDir: 'terraform'
          planOut: 'tfplan.bin'
          planPath: '$(Pipeline.Workspace)/tfplan'
          azureRmServiceConnection: $(AZURE_RM_SVC_CONN)
          backend:
            rg: $(TF_STATE_RG)
            sa: $(TF_STATE_SA)
            container: $(TF_STATE_CONTAINER)
            key: $(TF_STATE_KEY)