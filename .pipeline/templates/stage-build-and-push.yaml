parameters:
  - name: dockerServiceConnection
  type: string
  default: 'sc-acr-docker'
  
  - name: acrName
  type: string
  default: 'acrtaskpwc'
  - name: imageName
  type: string
  default: 'acrtaskpwc.azurecr.io/myflaskapp'
  - name: dockerfilePath
  type: string
  default: 'Dockerfile'
  - name: buildContext
  type: string
  default: '.'

stages:
- stage: BuildAndPush
  displayName: Build & Push Image
  jobs:
  - job: docker_build_push
    displayName: Docker build & push
    steps:
    - checkout: self
      fetchDepth: 0

    - template: step-resolve-tag.yaml

    - bash: |
        set -e
        echo "Logging in to Azure with VM managed identityâ€¦"
        az login --identity 1>/dev/null

        echo "ACR docker loginâ€¦"
        echo ${{ parameters.acrName }}
        az acr login -n ${{ parameters.acrName }}
        
    - task: Docker@2
      displayName: Build & Push (immutable + env tag)
      inputs:
        command: 'buildAndPush'
        repository: '${{ parameters.imageName }}'      # repo inside ACR
        dockerfile: '${{ parameters.dockerfilePath }}'
        buildContext: '${{ parameters.buildContext }}'
        # containerRegistry: '${{ parameters.dockerServiceConnection }}'
        tags: latest

    # - bash: |
    #     mkdir -p out
    #     cat > out/image-metadata.json <<EOF
    #     {
    #       "acrLoginServer": "${{ parameters.acrName }}.azurecr.io",
    #       "imageName": "${{ parameters.imageName }}",
    #       "buildTag": "$(Build.SourceBranchName)-$(Build.BuildId)",
    #       "envTag": "$(envTag)"
    #     }
    #     EOF
    #     cat out/image-metadata.json
    #   displayName: "Write & show image metadata"

    # - publish: out
    #   artifact: image-metadata
    #   displayName: "Publish image metadata artifact"
