# File: .pipeline/templates/job-deploy-k8s.yaml

parameters:
  - name: deploymentJobName
    type: string
    default: 'deploy'
  - name: displayName
    type: string
    default: 'Deploy to AKS'
  - name: environmentName
    type: string
    default: 'default'
  - name: kubernetesServiceConnection
    type: string
    default: ''
  - name: namespace
    type: string
    default: 'default'
  - name: manifestPath
    type: string
    default: 'k8s'
  - name: imageRepository
    type: string
  - name: imageTag
    type: string
    default: 'latest'
  - name: containerName
    type: string

jobs:
- deployment: ${{ parameters.deploymentJobName }}
  displayName: ${{ parameters.displayName }}
  environment: ${{ parameters.environmentName }}
  strategy:
    runOnce:
      deploy:
        steps:
        - checkout: self

        - bash: |
            echo "Updating image tag to: ${{ parameters.imageTag }}"
            sed -i "s|image: ${{ parameters.imageRepository }}:.*|image: ${{ parameters.imageRepository }}:${{ parameters.imageTag }}|g" ${{ parameters.manifestPath }}/deployment.yaml
            echo "Updated deployment.yaml:"
            cat ${{ parameters.manifestPath }}/deployment.yaml | grep "image:"
          displayName: 'Update Image Tag in Manifest'

        - task: KubernetesManifest@1
          displayName: "kubectl apply (${{ parameters.environmentName }})"
          inputs:
            action: 'deploy'
            kubernetesServiceConnection: '${{ parameters.kubernetesServiceConnection }}'
            namespace: '${{ parameters.namespace }}'
            manifests: |
              ${{ parameters.manifestPath }}/*.yaml
            containers: |
              ${{ parameters.containerName }}=${{ parameters.imageRepository }}:${{ parameters.imageTag }}

        # fail fast if rollout isn't healthy
        # - task: Kubernetes@1
        #   displayName: "kubectl rollout status"
        #   inputs:
        #     connectionType: 'Kubernetes Service Connection'
        #     kubernetesServiceEndpoint: '${{ parameters.kubernetesServiceConnection }}'
        #     namespace: '${{ parameters.namespace }}'
        #     command: 'rollout'
        #     arguments: 'status deployment/${{ parameters.containerName }} --timeout=120s'
