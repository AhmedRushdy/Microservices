# Reusable AKS deploy job template
# File: .pipeline/templates/job-deploy-k8s.yaml

parameters:
  - name: deploymentJobName
    type: string
    default: 'deploy'
  - name: displayName
    type: string
    default: 'Deploy to AKS'
  - name: environmentName
    type: string
    default: 'default'
  - name: kubernetesServiceConnection
    type: string
    default: ''
  - name: namespace
    type: string
    default: 'default'
  - name: manifestPath
    type: string
    default: 'k8s'
  - name: imageRepository
    type: string
  - name: imageTag
    type: string
    default: 'latest'
  - name: containerName
    type: string

jobs:
- deployment: ${{ parameters.deploymentJobName }}
  displayName: ${{ parameters.displayName }}
  environment: ${{ parameters.environmentName }}
  strategy:
    runOnce:
      deploy:
        steps:
        - checkout: self

        - task: KubernetesManifest@1
          displayName: "kubectl apply (${{ parameters.environmentName }})"
          inputs:
            action: 'deploy'
            kubernetesServiceConnection: '${{ parameters.kubernetesServiceConnection }}'
            namespace: '${{ parameters.namespace }}'
            manifests: |
              ${{ parameters.manifestPath }}/*.yaml

stages:
- stage: Deploy_Dev
  displayName: Deploy
  jobs:
  - template: .pipeline/templates/job-deploy-k8s.yaml
    parameters:
      deploymentJobName: 'dev'
      displayName: 'Deploy to default Environment'
      environmentName: 'default'
      kubernetesServiceConnection: $(K8S_SC)
      namespace: '$(NS)'
      manifestPath: $(K8S_MANIFEST_PATH)
      imageRepository: '$(ACR_NAME).azurecr.io/$(IMAGE_NAME)'
      imageTag: $(resources.pipeline.ci.runID)     # ‚Üê uses CI run ID (e.g., 26)
      containerName: $(K8S_CONTAINER_NAME)

        # Optional: fail fast if rollout isn't healthy
        # - task: Kubernetes@1
        #   displayName: "kubectl rollout status"
        #   inputs:
        #     connectionType: 'Kubernetes Service Connection'
        #     kubernetesServiceEndpoint: '${{ parameters.kubernetesServiceConnection }}'
        #     namespace: '${{ parameters.namespace }}'
        #     command: 'rollout'
        #     arguments: 'status deployment/${{ parameters.containerName }} --timeout=120s'
